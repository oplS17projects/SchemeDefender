# SchemeDefender

### Statement
Scheme Defender is a Galaga style game developed in Racket. We are both very
interested in video games and find the thought of making a game not only
challenging but also entertaining. Through this project we hope to learn a
different approach to making various games through functional programming.

### Analysis
Explain what approaches from class you will bring to bear on the project.

Be explicit about the techiques from the class that you will use. For example:

- Will you use data abstraction? How?
- Will you use recursion? How?
- Will you use map/filter/reduce? How?
- Will you use object-orientation? How?
- Will you use functional approaches to processing your data? How?
- Will you use state-modification approaches? How? (If so, this should be encapsulated within objects. `set!` pretty much should only exist inside an object.)
- Will you build an expression evaluator, like we did in the symbolic differentatior and the metacircular evaluator?
- Will you use lazy evaluation approaches?

The idea here is to identify what ideas from the class you will use in carrying out your project.

**Your project will be graded, in part, by the extent to which you adopt approaches from the course into your implementation, _and_ your discussion about this.**

### Deliverable and Demonstration

### Evaluation of Results

## Architecture Diagram
Upload the architecture diagram you made for your slide presentation to your repository, and include it in-line here.

Create several paragraphs of narrative to explain the pieces and how they interoperate.

## Schedule
Explain how you will go from proposal to finished product.

There are three deliverable milestones to explicitly define, below.

The nature of deliverables depend on your project, but may include things like processed data ready for import, core algorithms implemented, interface design prototyped, etc.

You will be expected to turn in code, documentation, and data (as appropriate) at each of these stages.

Write concrete steps for your schedule to move from concept to working system.

### First Milestone (Sun Apr 9)
We intend to have the basic foundation of our project running:
- Getting our Images/Sprite to Display properly
- Keyboard inputs/movement for the Images/Sprite
From this implementation we're able to build upon it even further.

### Second Milestone (Sun Apr 16)
Our secondary goal is implementing the follow:
- Window Collision
- Player/Enemies functioning

### Public Presentation (Mon Apr 24, Wed Apr 26, or Fri Apr 28 [your date to be determined later])
By the time of presentation we should have the previous goals implemented into the project, while finishing up our remainding one:
- Missle shooting/collision
An additional feature we want to include is a scoreboard, displaying Highscores from the player.

### Tim Larocque @timLarocque
will write the....

### Shaquill "Sonny" Chea @cheapets
After planning out our steps for completing the project we decided to split up the workload. The parts that I'll be working on are:

- Keyboard input/movement: Making the sprites move accordingly to the key you pressed. To accomplish this I plan on using the left/right arrow keys as the movement keys for the player spaceship.

- Window collision: Creating bounds within the display window that limits any Images/Sprites that we're using from going off the screen unless specified. Elaborating further form my Keyboard explaination, I decided to have boundries from the display window. 

- Missile shooting/collision: spawning missiles to "destroy" the enemy.

Fullfilling all parts of the plan would allow us to complete the project as intended form the start. Just like other teams, we expect to run into some obstacles while trying to accomplishing everything we need to do.

